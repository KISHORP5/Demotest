@model Demotest.Models.Member

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StateId, ViewBag.StateList as SelectList, "--Select State--", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, new SelectList(" "), "--Select City--", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Agree, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Agree)
                @Html.ValidationMessageFor(model => model.Agree, "", new { @class = "text-danger" })
            </div>
        </div>*@
            <input type="checkbox" id="Ischeck" />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-primary" id="btnsave"  disabled="disabled"/>
                <input type="button" value="Cancel" class="btn btn-danger " onclick="location.href='@Url.Action("Index","Member")';" />
            </div>
        </div>
    </div>
}





    

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
        <script>

            $(document).ready(function () {
                debugger
                $("#StateId").change(function () {
                    $.get("/Member/GetCityList", { StateId: $("#StateId").val() }, function (data) {
                        $("#CityId").empty();
                        $.each(data, function (index, row) {
                            $("#CityId").append("<option value='" + row.Id + "'>" + row.CityName + "</option>")
                        });
                    });
                })
                $(function () {
                    var chk = $('#Ischeck');
                    var btn = $('#btnsave');

                    chk.on('change', function () {
                        btn.prop("disabled", !this.checked);//true: disabled, false: enabled
                    }).trigger('change'); //page load trigger event
                });
            });


        </script>
    }

